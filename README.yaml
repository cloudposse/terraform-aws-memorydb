#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-memorydb

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2024"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-memorydb

# Badges to display
badges:
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/None.svg?style=for-the-badge
    url: https://github.com/None/commits
  - name: Latest Release
    image: https://img.shields.io/github/release/None.svg?style=for-the-badge
    url: https://github.com/None/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/None.svg?style=for-the-badge
    url: https://github.com/None/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: terraform-null-label
    description: Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention.
    url: https://github.com/cloudposse/terraform-null-label
  - name: terraform-aws-security-group
    description: Terraform module to create an AWS Security Group along with a set of Security Group Rules.
    url: https://github.com/cloudposse/terraform-aws-security-group

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: Cloud Posse Documentation
    url: https://docs.cloudposse.com
    description: The Cloud Posse Developer Hub (documentation)
  - name: AWS MemoryDB resources
    url: https://aws.amazon.com/memorydb/resources
    description: AWS MemoryDB resources
  - name: Terraform Standard Module Structure
    description: HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories.
    url: https://www.terraform.io/docs/language/modules/develop/structure.html
  - name: Terraform Module Requirements
    description: HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy.
    url: https://www.terraform.io/docs/registry/modules/publish.html#requirements
  - name: Terraform Version Pinning
    description: The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration
    url: https://www.terraform.io/docs/language/settings/index.html#specifying-a-required-terraform-version

# Short description of this project
description: |-
  This module allows an engineer to configure the admin user, subnet group, and parameter group for an AWS MemoryDB cluster.

# Introduction to the project
introduction: |-
  AWS MemoryDB is a fully managed, Redis-compatible, in-memory database service that delivers ultra-fast performance and Multi-AZ durability for modern applications built using microservices architectures.

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [the examples/complete directory](examples/complete).

  For automated tests of the complete example using [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [the test directory](test).

  ```hcl
  provider "aws" {
    region = "us-west-2"
  }

  # Create a standard label resource. See [null-label](https://github.com/cloudposse/terraform-null-label/#terraform-null-label--)
  module "label" {
    source = "cloudposse/label/null"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    namespace   = "eg"
    environment = "usw2"
    stage       = "sandbox"
    name        = "memorydb"
  }

  module "example" {
    source = "cloudposse/memorydb/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    ssm_parameter_name = "${module.label.id}/admin_password"

    context = module.label.context
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](examples/complete) - complete example of using this module

# How to get started quickly
quickstart: |-
  This module relies on two other AWS services:
  - AWS VPC (Virtual Private Cloud)
  - AWS SSM (Systems Manager)

  Make sure you either have a default VPC already made or have subnet IDs for any other VPC.
  At a minimum specify these variables:
  - `ssm_parameter_name` - the name of the SSM parameter that stores the admin password for the MemoryDB cluster
  - `subnet_ids` - required if not using a default VPC, this is a list of subnet IDs where the MemoryDB cluster will be deployed
  - `security_group_ids` - required if not using default security groups, this is a list of security group IDs to attach to the MemoryDB cluster
  
  See our [VPC module](https://github.com/cloudposse/terraform-aws-vpc) for creating a VPC.
  See our [Security Group module](https://github.com/cloudposse/terraform-aws-security-group) for creating security groups.

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors: []
